{
    "$schema": "http://json-schema.org/draft-04/schema#",
	"self": {
		"vendor": "corecontrol.io",
		"name": "Core Control Module",
		"format": "jsonschema",
		"version": "0-0-1",
		"copyright": "2015 Neyrinck LLC"
	},
    "description": "A Core Control(CC) module. Core Control is a model-view-adapter pattern-based system that lets control 'surfaces' display and adjust remote data models. For example, an audio software plug-in can be controlled remotely from a device with knobs and buttons.  A CoreControl 'module' is either a surface or a data model. This schema is for CoreControl modules.",
    "type": "object",
    "required": [ "type", "identifier", "name", "path"],
    "properties": {
        "type": {
            "type": "string",
		"enum": ["model", "surface", "array", "midi"],
            "description": "The module type defines its role and behaviors. A model stores all properties and broadcasts any property changes to one or more adapters. A surface broadcasts property changes to a single adapter and displays property changes received from that adapter."
        },
        "identifier": {
            "type": "string",
            "description": "A unique, readable identifier such as 'adobe.premierpro' or 'mixer' It should never change. Similar to a bundle identifier used in Apple code. Adapters use this value to identify its mapping implementation."
        },
        "name": {
            "type": "string",
            "description": "A readable name such as 'Adobe Premiere Pro' or 'Mixer.' It can be localized and change freely."
        },
        "path": {
            "type": "string",
            "description": "This identifies the module path in a hierarchy of modules."
        },
        "guid": {
            "type": "string",
            "description": "This identifies the module at runtime for application specific use."
        },
        "readablePath": {
            "type": "string",
            "description": "This identifies the module path is located in a hierarchy of modules. It is localizable and can change freely."
        },
	"controls": {
		"description":"Controls are objects with a control value property that the adapter maps between model modules and surface modules. A model exposes its controls so they can be broadcast to one or more adapters and be changed by those adapters. A surface exposes its controls to be changed by a single adapter and broadcast to a single adapter."
            	"type": "object",
		"properties": {
			"*": { "$ref": "https://github.com/pneyrinck/corecontrol/blob/master/schema/v1/control.json" }
		},
            "uniqueItems": true
        },
	"meters": {
		"description":"Meters are similar to controls, but a model only broadcasts the values and a surface only displays the values."
            "type": "object",
		"properties": {
			"*": { "$ref": "https://github.com/pneyrinck/corecontrol/blob/master/schema/v1/meter.json" }
		},
            "uniqueItems": true
        },
        "category": { "type": "string" },
        "iconUri": { "type": "string", "format": "uri"},
        "host": { "type": "string"},
		"location": { "$ref": "https://github.com/pneyrinck/corecontrol/blob/master/schema/v1/location.json" }
	},
	"color": {
		"type": "string"
		"default" : "none",
		"description": "A CSS color value for application specific use."
	},
    }
}

